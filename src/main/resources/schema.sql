CREATE TABLE IF NOT EXISTS oauth_client_details (
  client_id varchar(255) PRIMARY KEY NOT NULL,
  client_secret varchar(255) NOT NULL,
  web_server_redirect_url varchar(2048) DEFAULT NULL,
  scope varchar(255) DEFAULT NULL,
  access_token_validity int DEFAULT NULL,
  refresh_token_validity int DEFAULT NULL,
  resource_ids varchar(1024) DEFAULT NULL,
  authorized_grant_types varchar(1024) DEFAULT NULL,
  authorities varchar(1024) DEFAULT NULL,
  additional_information varchar(4096) DEFAULT NULL,
  autoapprove varchar(255) DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS permission (
  permission_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  permission_name varchar(512) UNIQUE DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS role (
  role_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  role_name varchar(255) UNIQUE DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS app_user (
  user_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  username varchar(100) UNIQUE NOT NULL,
  password varchar(1024) NOT NULL,
  email varchar(1024) UNIQUE NOT NULL,
  enabled boolean NOT NULL,
  account_non_expired boolean NOT NULL,
  credentials_non_expired boolean NOT NULL,
  account_non_locked boolean NOT NULL,
);

CREATE TABLE IF NOT EXISTS permission_role (
  permission_id int REFERENCES permission (permission_id),
  role_id int REFERENCES role (role_id),
  CONSTRAINT permission_role_pkey PRIMARY KEY (permission_id, role_id)
);

CREATE TABLE IF NOT EXISTS role_user (
  role_id int REFERENCES role (role_id),
  user_id bigint REFERENCES app_user (user_id) ON DELETE CASCADE,
  CONSTRAINT role_user_pkey PRIMARY KEY (role_id, user_id)
);
